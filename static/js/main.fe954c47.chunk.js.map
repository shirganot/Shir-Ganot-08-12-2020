{"version":3,"sources":["constants.js","helpers/actionTypes.js","helpers/customFetch.js","store/actions/errorAction.js","store/actions/messagesAction.js","pages/ComposeEmail/index.jsx","pages/ManageEmails/ListOfMessages/index.jsx","store/actions/navigationAction.js","parts/Tabs/index.jsx","parts/Navbar/index.jsx","components/Snackbar/index.jsx","pages/ManageEmails/index.jsx","pages/MessageBody/index.jsx","App.jsx","reportWebVitals.js","store/reducers/messagesReducer.js","store/reducers/navigationReducer.js","store/reducers/errorReducer.js","store/reducers/index.js","index.jsx"],"names":["EMAIL_VALIDATION","ERR_STR","Object","freeze","required","pattern","requiredSearchedEmail","GET_ALL_USER_MESSAGES","DELETE_MASSEGE","CREATE_NEW_MSG","SET_CHOSEN_MSG","SET_CURRENT_TAB_IN_MANAGER","SET_ERROR","customFetch","originUrl","payload","url","process","fPromise","fetch","Promise","resolve","reject","then","toJSON","ok","data","Error","message","response","catch","error","res","json","require","config","setError","err","type","at","deleteMessage","msgId","dispatch","a","method","ComposeEmail","history","useHistory","useDispatch","useForm","register","handleSubmit","errors","moveToManageEmails","push","Dialog","className","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","disableTypography","Typography","variant","IconButton","aria-label","onClick","Close","DialogContent","onSubmit","msgInfo","headers","body","JSON","stringify","newMsg","TextField","name","label","inputRef","Boolean","senderId","helperText","receiverId","subject","multiline","rows","DialogActions","Button","color","Delete","autoFocus","form","Send","ListOfMessages","msgs","useSelector","messages","currTab","navigationInfo","onClickMessage","setChosenMsgId","length","List","component","map","senderEmail","ListItem","button","ListItemText","primary","secondary","ListItemIcon","uuid","Tabs","tabs","Paper","square","value","findIndex","tab","toLowerCase","indicatorColor","textColor","onChange","event","newValue","newTab","centered","Tab","useStyles","makeStyles","theme","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","breakpoints","up","spacing","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","Navbar","classes","mode","formState","watch","isValid","useEffect","email","getAllUserMessages","searchedEmail","AppBar","Toolbar","Search","InputBase","placeholder","root","input","inputProps","Snackbar","pathname","useLocation","state","pathArr","split","inManagerPage","autoHideDuration","Alert","severity","ManageEmails","Fab","size","Add","MessageBody","chosenMsgId","currMsg","find","scroll","DialogContentText","App","exact","path","render","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","sent","received","combineReducers","produce","draft","filter","msg","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fe954c47.chunk.js","sourcesContent":["export const EMAIL_VALIDATION = /\\S+@\\S+\\.\\S+/;\r\nexport const ERR_STR = Object.freeze({\r\n  required: 'This field is required',\r\n  pattern: 'The email is not valid',\r\n  requiredSearchedEmail: 'Please enter the desired email in the search box',\r\n});\r\n","// Messages store\r\nexport const GET_ALL_USER_MESSAGES = 'GET_ALL_USER_MESSAGES';\r\nexport const DELETE_MASSEGE = 'DELETE_MASSEGE';\r\nexport const CREATE_NEW_MSG = 'CREATE_NEW_MSG';\r\nexport const SET_CHOSEN_MSG = 'SET_CHOSEN_MSG';\r\n\r\n// Navigation store\r\nexport const SET_CURRENT_TAB_IN_MANAGER = 'SET_CURRENT_TAB_IN_MANAGER';\r\n\r\n// Handle errors\r\nexport const SET_ERROR = 'SET_ERROR';\r\n","require('dotenv').config();\r\n\r\nexport default function customFetch(originUrl, payload = null) {\r\n  const url = `${process.env.REACT_APP_FETCH_URL}${originUrl}`;\r\n  const fPromise = payload ? fetch(url, payload) : fetch(url);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    fPromise\r\n      .then(toJSON)\r\n      .then(({ ok, data }) => {\r\n        if (!ok) throw new Error(data.message);\r\n        return data;\r\n      })\r\n      .then((response) => resolve(response))\r\n      .catch((error) => reject(error));\r\n  });\r\n}\r\n\r\nfunction toJSON(res) {\r\n  return new Promise((resolve) => {\r\n    res.json().then((data) => {\r\n      resolve({\r\n        data,\r\n        ok: res.ok,\r\n      });\r\n    });\r\n  });\r\n}\r\n","import * as at from '../../helpers/actionTypes';\r\n\r\nexport const setError = (err) => ({\r\n  type: at.SET_ERROR,\r\n  payload: err,\r\n});\r\n","import * as at from '../../helpers/actionTypes';\r\nimport customFetch from '../../helpers/customFetch';\r\nimport { setError } from './errorAction';\r\n\r\nexport const getAllUserMessages = (email) => async (dispatch) => {\r\n  try {\r\n    const res = await customFetch(`/messages?email=${email}`);\r\n\r\n    dispatch({\r\n      type: at.GET_ALL_USER_MESSAGES,\r\n      payload: {\r\n        messages: res,\r\n      },\r\n    });\r\n\r\n    dispatch(setError(null));\r\n  } catch (err) {\r\n    dispatch(setError(err.message));\r\n  }\r\n};\r\n\r\nexport const deleteMessage = (msgId) => async (dispatch) => {\r\n  try {\r\n    await customFetch(`/messages/${msgId}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    dispatch({\r\n      type: at.DELETE_MASSEGE,\r\n      payload: {\r\n        msgId,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setError(`Delete message wasn't successful - ${err.message}`));\r\n  }\r\n};\r\n\r\n// MsgInfo obj={senderEmail, recevierEmail, msgContent}\r\nexport const createNewMessage = (msgInfo) => async (dispatch) => {\r\n  try {\r\n    const res = await customFetch(`/messages`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(msgInfo),\r\n    });\r\n\r\n    dispatch({\r\n      type: at.CREATE_NEW_MSG,\r\n      payload: {\r\n        newMsg: res,\r\n      },\r\n    });\r\n    dispatch(setError(null));\r\n  } catch (err) {\r\n    dispatch(setError(`Message was not sent because - ${err.message}`));\r\n  }\r\n};\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  IconButton,\r\n  TextField,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Typography,\r\n  DialogTitle,\r\n} from '@material-ui/core';\r\nimport { Delete, Send, Close } from '@material-ui/icons';\r\nimport { EMAIL_VALIDATION, ERR_STR } from '../../constants';\r\nimport { createNewMessage } from '../../store/actions/messagesAction';\r\n\r\nconst ComposeEmail = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const moveToManageEmails = () => history.push('/manage-emails');\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(createNewMessage(data));\r\n    moveToManageEmails();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      className=\"compose-email\"\r\n      open\r\n      onClose={moveToManageEmails}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\" disableTypography>\r\n        <Typography variant=\"h5\">Compose Email</Typography>\r\n        <IconButton aria-label=\"close\" onClick={moveToManageEmails}>\r\n          <Close />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)} id=\"myform\">\r\n          <TextField\r\n            type=\"text\"\r\n            name=\"senderEmail\"\r\n            label=\"enter sender email\"\r\n            variant=\"outlined\"\r\n            inputRef={register({ required: true, pattern: EMAIL_VALIDATION })}\r\n            error={Boolean(errors.senderId)}\r\n            helperText={errors.senderId && ERR_STR[errors.senderId.type]}\r\n          />\r\n          <TextField\r\n            type=\"text\"\r\n            name=\"receiverEmail\"\r\n            label=\"enter receiver email\"\r\n            variant=\"outlined\"\r\n            inputRef={register({ required: true, pattern: EMAIL_VALIDATION })}\r\n            error={Boolean(errors.receiverId)}\r\n            helperText={errors.receiverId && ERR_STR[errors.receiverId.type]}\r\n          />\r\n          <TextField\r\n            type=\"text\"\r\n            name=\"subject\"\r\n            label=\"Subject\"\r\n            variant=\"outlined\"\r\n            inputRef={register({ required: true })}\r\n            error={Boolean(errors.subject)}\r\n            helperText={errors.subject && ERR_STR[errors.subject.type]}\r\n          />\r\n          <TextField\r\n            type=\"text\"\r\n            name=\"body\"\r\n            label=\"Message\"\r\n            multiline\r\n            rows={18}\r\n            variant=\"outlined\"\r\n            inputRef={register({ required: true })}\r\n            error={Boolean(errors.message)}\r\n            helperText={errors.message && ERR_STR[errors.message.type]}\r\n          />\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={moveToManageEmails} color=\"secondary\" variant=\"contained\">\r\n          <Delete />\r\n          Delete\r\n        </Button>\r\n        <Button autoFocus color=\"primary\" variant=\"contained\" type=\"submit\" form=\"myform\">\r\n          <Send />\r\n          Send\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ComposeEmail;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport { List, ListItem, ListItemText, ListItemIcon } from '@material-ui/core';\r\nimport { Delete } from '@material-ui/icons';\r\nimport uuid from 'react-uuid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { setChosenMsgId } from '../../../store/actions/navigationAction';\r\nimport { deleteMessage } from '../../../store/actions/messagesAction';\r\n\r\nconst ListOfMessages = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const msgs = useSelector(({ messages }) => messages);\r\n  const { currTab } = useSelector(({ navigationInfo }) => navigationInfo);\r\n\r\n  const onClickMessage = (msgId) => {\r\n    dispatch(setChosenMsgId(msgId));\r\n    history.push('/manage-emails/email-body');\r\n  };\r\n\r\n  const deleteMessageFromList = (msgId) => dispatch(deleteMessage(msgId));\r\n\r\n  if (!msgs[currTab].length) {\r\n    return <h3 className=\"err_description\">There is no emails</h3>;\r\n  }\r\n  return (\r\n    <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n      {msgs[currTab].map(({ senderEmail, subject, id }) => (\r\n        <ListItem button key={uuid()}>\r\n          <ListItemText\r\n            primary={senderEmail}\r\n            secondary={`Subject: ${subject}`}\r\n            onClick={() => onClickMessage(id)}\r\n          />\r\n          <ListItemIcon onClick={() => deleteMessageFromList(id)}>\r\n            <Delete />\r\n          </ListItemIcon>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ListOfMessages;\r\n","import * as at from '../../helpers/actionTypes';\r\n\r\nexport const setCurrTab = (tab) => ({\r\n  type: at.SET_CURRENT_TAB_IN_MANAGER,\r\n  payload: {\r\n    tab,\r\n  },\r\n});\r\n\r\nexport const setChosenMsgId = (msgId) => ({\r\n  type: at.SET_CHOSEN_MSG,\r\n  payload: { msgId },\r\n});\r\n","import React from 'react';\r\nimport { Paper, Tabs as MuiTabs, Tab } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport uuid from 'react-uuid';\r\nimport { setCurrTab } from '../../store/actions/navigationAction';\r\n\r\nconst Tabs = ({ tabs }) => {\r\n  const dispatch = useDispatch();\r\n  const { currTab } = useSelector(({ navigationInfo }) => navigationInfo);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    const newTab = tabs[newValue];\r\n    dispatch(setCurrTab(newTab));\r\n  };\r\n\r\n  return (\r\n    <Paper square>\r\n      <MuiTabs\r\n        value={tabs.findIndex((tab) => tab.toLowerCase() === currTab)}\r\n        indicatorColor=\"secondary\"\r\n        textColor=\"primary\"\r\n        onChange={handleChange}\r\n        centered\r\n      >\r\n        {tabs.map((label) => (\r\n          <Tab label={label} key={uuid()} />\r\n        ))}\r\n      </MuiTabs>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nTabs.propTypes = {\r\n  tabs: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useEffect } from 'react';\r\nimport './style.scss';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AppBar, Toolbar, Typography, InputBase } from '@material-ui/core';\r\nimport { Search } from '@material-ui/icons';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { EMAIL_VALIDATION } from '../../constants';\r\nimport { getAllUserMessages } from '../../store/actions/messagesAction';\r\nimport { setError } from '../../store/actions/errorAction';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '15ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { register, formState, watch } = useForm({\r\n    mode: 'onChange',\r\n  });\r\n\r\n  const { isValid, errors } = formState;\r\n\r\n  useEffect(() => {\r\n    const email = watch('searchedEmail');\r\n    if (isValid && email) {\r\n      dispatch(getAllUserMessages(email));\r\n    } else if (errors.searchedEmail) {\r\n      dispatch(setError(errors.searchedEmail.type));\r\n    }\r\n  }, [formState]);\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h4\">Emails Manager</Typography>\r\n        <div className={classes.search}>\r\n          <div className={classes.searchIcon}>\r\n            <Search />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Enter email address\"\r\n            name=\"searchedEmail\"\r\n            inputRef={register({ required: true, pattern: EMAIL_VALIDATION })}\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n            inputProps={{ 'aria-label': 'search' }}\r\n          />\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Snackbar as MuiSnackbar } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { ERR_STR } from '../../constants';\r\n\r\nconst Snackbar = () => {\r\n  const { pathname } = useLocation();\r\n  const { error } = useSelector((state) => state);\r\n\r\n  const pathArr = pathname.split('/');\r\n  const inManagerPage = pathArr[pathArr.length - 1] === 'manage-emails';\r\n  return (\r\n    <MuiSnackbar open={Boolean(error) && inManagerPage} autoHideDuration={6000}>\r\n      <Alert variant=\"filled\" severity=\"error\">\r\n        {ERR_STR[error] || error}\r\n      </Alert>\r\n    </MuiSnackbar>\r\n  );\r\n};\r\n\r\nexport default Snackbar;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Fab } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport ListOfMessages from './ListOfMessages';\r\nimport Tabs from '../../parts/Tabs';\r\nimport Navbar from '../../parts/Navbar';\r\nimport Snackbar from '../../components/Snackbar';\r\n\r\nconst ManageEmails = () => {\r\n  const history = useHistory();\r\n  const openComposeEmail = () => history.push(`/manage-emails/compose`);\r\n\r\n  return (\r\n    <div className=\"manage-emails page\">\r\n      <Navbar />\r\n      <Tabs tabs={[`sent`, `received`]} />\r\n      <ListOfMessages />\r\n      <Snackbar />\r\n      <Fab size=\"large\" color=\"primary\" aria-label=\"add\" onClick={openComposeEmail}>\r\n        <Add />\r\n      </Fab>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageEmails;\r\n","import React from 'react';\r\nimport {\r\n  IconButton,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Typography,\r\n  DialogTitle,\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Delete, Close } from '@material-ui/icons';\r\nimport { deleteMessage } from '../../store/actions/messagesAction';\r\n\r\nconst MessageBody = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { chosenMsgId, currTab } = useSelector(({ navigationInfo }) => navigationInfo);\r\n  const msgs = useSelector(({ messages }) => messages);\r\n\r\n  const moveToManageEmails = () => history.push('/manage-emails');\r\n\r\n  const deleteThisMessage = () => {\r\n    dispatch(deleteMessage(chosenMsgId));\r\n    moveToManageEmails();\r\n  };\r\n\r\n  const currMsg = msgs[currTab].find(({ id }) => id === chosenMsgId);\r\n  const { subject, body } = currMsg;\r\n\r\n  return (\r\n    <Dialog\r\n      className=\"compose-email\"\r\n      open\r\n      scroll=\"paper\"\r\n      onClose={moveToManageEmails}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\" disableTypography>\r\n        Email\r\n        <IconButton aria-label=\"close\" onClick={moveToManageEmails}>\r\n          <Close />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Typography variant=\"title\">{subject}</Typography>\r\n        <DialogContentText>{body}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={deleteThisMessage} color=\"primary\" variant=\"contained\">\r\n          delete\r\n          <Delete />\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MessageBody;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport ComposeEmail from './pages/ComposeEmail';\r\nimport ManageEmails from './pages/ManageEmails';\r\nimport MessageBody from './pages/MessageBody';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/manage-emails\" />} />\r\n        <Route path=\"/manage-emails\" component={ManageEmails} />\r\n      </Switch>\r\n      {/* //Another switch to display popup windows, with ManageEmails in the background */}\r\n      <Switch>\r\n        <Route path=\"/manage-emails/compose\" component={ComposeEmail} />\r\n        <Route path=\"/manage-emails/email-body\" component={MessageBody} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import produce from 'immer';\r\nimport * as at from '../../helpers/actionTypes';\r\n\r\nconst initialState = {\r\n  sent: [],\r\n  received: [],\r\n};\r\n\r\nexport default function userReducer(state = initialState, { type, payload }) {\r\n  switch (type) {\r\n    case at.GET_ALL_USER_MESSAGES: {\r\n      return payload.messages;\r\n    }\r\n    case at.DELETE_MASSEGE: {\r\n      return produce(state, (draft) => {\r\n        draft.sent = draft.sent.filter((msg) => msg.id !== payload.msgId);\r\n        draft.received = draft.received.filter((msg) => msg.id !== payload.msgId);\r\n      });\r\n    }\r\n    case at.CREATE_NEW_MSG: {\r\n      return produce(state, (draft) => {\r\n        draft.sent.push(payload.newMsg);\r\n      });\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// import produce from 'immer';\r\nimport produce from 'immer';\r\nimport * as at from '../../helpers/actionTypes';\r\n\r\nconst initialState = {\r\n  currTab: 'sent',\r\n  chosenMsgId: null,\r\n};\r\n\r\nexport default function userReducer(state = initialState, { type, payload }) {\r\n  switch (type) {\r\n    case at.SET_CURRENT_TAB_IN_MANAGER: {\r\n      return produce(state, (draft) => {\r\n        draft.currTab = payload.tab;\r\n      });\r\n    }\r\n\r\n    case at.SET_CHOSEN_MSG: {\r\n      return produce(state, (draft) => {\r\n        draft.chosenMsgId = payload.msgId;\r\n      });\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import produce from 'immer';\r\nimport * as at from '../../helpers/actionTypes';\r\n\r\nconst initialState = 'requiredSearchedEmail';\r\n\r\nexport default function errorReducer(state = initialState, { type, payload }) {\r\n  switch (type) {\r\n    case at.SET_ERROR: {\r\n      return payload === 'required' ? 'requiredSearchedEmail' : payload;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport messagesReducer from './messagesReducer';\r\nimport navigationReducer from './navigationReducer';\r\nimport errorReducer from './errorReducer';\r\n\r\nexport default combineReducers({\r\n  messages: messagesReducer,\r\n  navigationInfo: navigationReducer,\r\n  error: errorReducer,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/global.scss';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport rootReducer from './store/reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}